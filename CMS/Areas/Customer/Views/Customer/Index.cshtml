@using CMS.Areas.Customer.Const
@model CMS.Areas.Customer.Models.Customer.IndexViewModel

@{
    ViewBag.Title = "Quản lý tài khoản khách hàng";
    string namePage = "Danh sách tài khoản khách hàng";
    string subName = "Quản lý tài khoản khách hàng";
    Dictionary<string, string> openWith = new Dictionary<string, string>();
    openWith.Add("txtKeyword", Model.ListData.RouteValue?["txtKeyword"]?.ToString());
    openWith.Add("TypeGroup", Model.ListData.RouteValue?["TypeGroup"]?.ToString());
    openWith.Add("Type", Model.ListData.RouteValue?["Type"]?.ToString());
    openWith.Add("status", Model.ListData.RouteValue?["status"]?.ToString());
}

<section class="content-header">
    <div class="container-fluid subname">
        <div class="row">
            <div class="col-sm-6 ">
                <ol class="breadcrumb float-sm-left">
                    <li class="breadcrumb-item">
                        <a>@subName</a>
                    </li>
                </ol>
            </div>
            <div class="col-sm-6">
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-header ">
                        <p class="card-title namePageText">@namePage</p>
                        <div class="float-right">
                            @if (Model.IsExportFile)
                            {
                                @await Html.PartialAsync("Partial/BasicAction/Export", new { area = "Customer", action = "Export", parameters = openWith })
                            }
                            @await Html.PartialAsync("Partial/BasicAction/Create", new { area = "Customer" })
                            @await Html.PartialAsync("Partial/BasicAction/DeleteAll", new { area = "Customer", action = "DeleteAll" })
                        </div>
                    </div>
                    <div class="card-body">
                        <form class="row" method="get">
                            <div class="col-xs-12 col-sm-4">
                                <input autocomplete="off" name="txtKeyword" class="form-control form-control-xl" placeholder="Nhập tài khoản hoặc họ tên" value="@Model.ListData.RouteValue["txtKeyword"]" />
                            </div>
                            <div class="col-xs-12 col-sm-2">
                                <select class="form-control select2 " style="width: 100%;" name="Type" asp-for="@Model.ListData.RouteValue["Type"]">
                                    <option value="">Tất cả hình thức đăng nhập</option>
                                    @{
                                        foreach (var item in CustomerConst.ListTypeCustomer)
                                        {
                                            <option value="@item.Key">@item.Value</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-xs-12 col-sm-2">
                                <select class="form-control select2 " style="width: 100%;" name="TypeGroup" asp-for="@Model.ListData.RouteValue["TypeGroup"]">
                                    <option value="">Tất cả đối tượng khách hàng</option>
                                    @{
                                        foreach (var item in CustomerTypeGroupConst.ListCustomerTypeGroupConst)
                                        {
                                            <option value="@item.Key">@item.Value</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-xs-12 col-sm-2">
                                <select class="form-control select2 " style="width: 100%;" name="status" asp-for="@Model.ListData.RouteValue["status"]">
                                    <option value="">Tất cả trạng thái</option>
                                    @{
                                        foreach (var item in CustomerConst.ListStatusCustomer)
                                        {
                                            <option value="@item.Key">@item.Value</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-xs-12 col-sm-2">
                                <button type="submit" class="btn btn-danger btn-block filter btn-xl">Tìm kiếm</button>
                            </div>
                        </form>
                        <div class="table-responsive tablePaddingTop">
                            <table class="table tab-content table-bordered table-check-all table-hover table-bordered-index ">
                                <thead class="table-thead">
                                <tr>
                                    <th class="text-center" style="width: 45px">
                                        <input type="checkbox" class="i-checks chkAll" />
                                    </th>
                                    <th class="text-center"  style="width: 45px">STT</th>
                                    <th  class="" >Tài khoản</th>
                                    <th  class=""  >Họ tên</th>
                                    <th  class=""  >Email</th>
                                    <th  class=""  >Hình thức đăng nhập</th>
                                    <th  class=""  >Đối tượng khách hàng</th>
                                    <th  class=""  >Trạng thái</th>
                                    <th class="text-center" style="width: 180px"></th>
                                </tr>
                                </thead>
                                <tbody>
                                @if (Model.ListData is {Count: > 0 })
                                {
                                    int index = (Model.ListData.PageIndex - 1) * Startup.PageSize + 1;
                                    @foreach (var item in Model.ListData)
                                    {
                                        <tr>
                                            <td class="text-center align-middle">
                                                <input type="checkbox" class="i-checks chkItem" value="@item.Id"/>
                                            </td>
                                            <td class="text-center align-middle">
                                                @(index++)
                                            </td>
                                            <td class="align-middle">
                                                <a asp-area="Customer" asp-action="Details" asp-route-id="@item.Id">@(item.UserName)</a>
                                            </td>
                                            <td class="align-middle">
                                                @(item.FullName)
                                            </td>
                                            <td class="align-middle">
                                                @(item.Email)
                                            </td>
                                            <td class="align-middle">
                                                @Html.Raw(CustomerConst.ListTypeCustomerColor.FirstOrDefault(x => x.Key == item.Type)!.Value)
                                            </td>
                                            <td class="align-middle">
                                                @Html.Raw(CustomerTypeGroupConst.ListCustomerTypeGroupConstColor.FirstOrDefault(x => x.Key == item.TypeGroup)!.Value)
                                            </td>
                                            <td class="align-middle">
                                                @Html.Raw(CustomerConst.ListStatusCustomerColor.FirstOrDefault(x => x.Key == item.Status)!.Value)
                                            </td>
                                            <td class="text-center align-middle">
                                                @await Html.PartialAsync("Partial/BasicActionTable/View", new { id = @item.Id })
                                                @await Html.PartialAsync("Partial/BasicActionTable/Edit", new { id = @item.Id })
                                                @await Html.PartialAsync("Partial/BasicActionTable/Delete", new { id = @item.Id })
                                            </td>
                                        </tr>
                                    }
                                  
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="10" class="text-center">Không có dữ liệu</td>
                                    </tr>
                                }
                                </tbody>
                            </table>
                        </div>
                        @await Html.PartialAsync("Partial/BasicActionTable/RecordData", new { DataList = Model.ListData }) 
                    </div>

                </div>
            </div>
        </div>

    </div>
</section>

@section Scripts
{
}




